version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name mystack-${CIRCLE_WORKFLOW_ID:0:7}


orbs:
  aws-cli: circleci/aws-cli@2.0.3
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: create cloudformation stack
          command:
            aws cloudformation deploy --template-file template.yml --stack-name mystack-${CIRCLE_WORKFLOW_ID:0:5} --region us-east-1

  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["cf:80:d7:d5:b7:f7:35:ea:61:15:88:4a:4c:28:8c:71"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt main2.yml
          
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: simulate error
          command: return 1
      - destroy_environment
            

workflows:
  mywrokflow1:
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure